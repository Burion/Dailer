@using DailerApp.Models;
@model DailerApp.Models.IndexModel
@{
    ViewData["Title"] = "Home Page";
}
<head>
    <link rel="stylesheet" type="text/css" href = "css/site.css">
</head>
<div class="text-center">
    <div>
    </div>
    
</div>

<div class="container" >
    <div>
        <canvas id="marksChart"></canvas>
    </div>
    
    <div style="display: flex; flex-direction: column; border: 1px solid black; border-radius: 15px;">
        <p>Today's card</p>
        @foreach(var trait in Model.Traits)
        {
            
            <div class="container">
            <div style="width: 100%"><p>@trait.Title</p></div>

            <div class="container">
                @for(int x = 1; x <= 5; x++)
                {
                    
                <p id="str-@trait.Id-@x" onclick="setMark(@trait.Id, @x)">☆</p>
                
                }
                </div>
            <!--"★" : "☆"-->
            </div>
        }
        <button id="reward" style="margin: 10px" class="btn btn-primary" disabled title="Star all traits first!">Get reward!</button>
        </div>
        <div id="loader" style="margin: 10px" class="loader" hidden></div>
        
</div>

<form>
    <textarea id="note" class="form-control" onkeyup="setNoteButton(true)">@Model.Note</textarea>
    
</form>
<button id="notebutton" style="margin-top: 10px" class="btn btn-primary" onclick="createNoteFromBody()" disabled>Save</button>


@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.js"></script>
    <script>
    var radarChart;
    window.onload = function(){
        radialChart();
        updateStars();
    }


    function fillStarRec(trait, value){
        fillStar(trait, value);
        var valueInt = parseInt(value, 10);
        if(valueInt > 1){
            fillStarRec(trait, valueInt - 1);
        }
    }
    function fillStar(trait, value){
        var star = document.getElementById("str-" + trait + "-" + value);
        star.innerHTML = "★";
    }
    function updateStrs(traitIds, marks){
        for(var x = 0; x < traitIds.length; x ++){
            for(var y = 1; y < 6; y++){
                document.getElementById("str-" + traitIds[x] + "-" + y).innerHTML = "☆";
            }
            fillStarRec(traitIds[x], marks[x]);
            }
    }
    function updateStars(){
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
        var yyyy = today.getFullYear();
        today = mm + '/' + dd + '/' + yyyy;
        refreshStars(dd, mm, yyyy);
    }
    function refreshStars(dd, mm, yyyy){
    $.ajax({
        type: "POST", 
        url: "/getmarks/" + dd + "/" + mm + "/" + yyyy,
        success: function (response){
            for(var x = 0; x < response[0].length; x ++){
            for(var y = 1; y < 6; y++){
                document.getElementById("str-" + response[0][x] + "-" + y).innerHTML = "☆";
            }
            fillStarRec(response[0][x], response[1][x]);
            }
            
        }
        });
    }
    function updateChart(){
        $.ajax(
            {
            type: "GET",
            url: '/getstring',
            success: function (response) {
                var _data = response[1].map(function(item) {
                return parseInt(item, 10);
            });
            radarChart.data.datasets[0].data = _data;
            radarChart.update();
            updateStrs(response[2], response[3]);
            
            }
            });
    }
    
    function setMark(trait, mark)
    {
        
        document.getElementById("loader").hidden = false;
        $.ajax(
            {
                type: "POST",
                url: '/setmark/' + trait + "/" + mark, 
                success: function(response){
                    updateChart();
                    
                    document.getElementById("loader").hidden = true;
                }                
            }
        ); 
    }
    function printChart(_lb)
    {
        var marksCanvas = document.getElementById("marksChart");
        var data1 = _lb[1].map(function(item) {
        return parseInt(item, 10);
        });
        
        var data2 = _lb[2].map(function(item) {
        return parseInt(item, 10);
        });
        var marksData = {
        labels: _lb[0],
        datasets: [{
            label: "January",
            backgroundColor: "rgba(200,0,0,0.2)",
            data: data1
        }]
        };

        radarChart = new Chart(marksCanvas, {
        type: 'radar',
        data: marksData,
        options:{
            scale:{
                ticks:{
                 min: 0,
                 suggestedMax: 1
                }
            }
        }
        });   
    }

    function radialChart(){
    $.ajax(
    {
        type: "GET",
        url: '/getstring',
        success: function (response) {
            printChart(response);
            //updateChart();
    }
    });
    }
    
    function createNote(_text){
    $.ajax(
        {
            type: "POST",
            url: "/createnote",
            data: {
                text: _text
            },
            success: function(response) {
                
            }
        }
    )
    }
    function createNoteFromBody(){
        var txt = document.getElementById('note').value

        createNote(txt)
    }

    function setNoteButton(bool)
    {
        document.getElementById('notebutton').disabled = !bool
    }
</script>
}

